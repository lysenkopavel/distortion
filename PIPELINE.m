%
% находим центры объектов на кадре -> result_name
startuem
% showresult.m показать результат

% для каждой точки знаем ее перемещение -> mass_image_centers
calculate

% вычисляем параметры дисторсии  aproxdist
% апроксимируем параметры гармоническими функциями параметры -> harmonicX harmonicY
distcorrect % внутри вызывается aproxdist

% строим для каждого параметра картинку с его значениями для разных филтров
% и с апроксимацией этих значений
%plotParameterAproximation % устарел немного, структура уже не та

testimwarp
%}
%{

посмотреть как все это выглядит в разных фильтрах.
для фильтра 625 алгоритм захватывает ненужные точки с другой части кадра --
нужно избавиться. Посмотреть для 880.

 оценить оптимальную степень полиномов используя критерий хи квадрат.
 дисперсия измеренной величины: на каждом кадре находить положение
 изображения, и потом усреднить и найти дисперсию. Нужно переснять с
 большим числом кадров для одного угла.

 проверить как работает модель при совмесном повороте призм.

попробовать исправить изображения за дисторсию с помощью этой модели.
сделать нечто, что будет принимать потом imwarp и на выходе давать исправленное изображение 

%}



%{
for i = 1:1:2
    for j = 1:1:2
        a(i,j)=harmonic_function(harmonicX(i,j).betax,135*pi/180);
    end
end

for i = 1:1:2
    for j = 1:1:2
        b(i,j)=harmonic_function(harmonicY(i,j).betay,135*pi/180);
    end
end

%}


   